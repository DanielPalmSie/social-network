version: '3.8'
services:
  haproxy-pg:
    image: haproxy:latest
    container_name: haproxy-pg
    restart: "no"
    networks:
      - pgnet
    volumes:
      - "./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"
    ports:
      - "5432:5432"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    ports:
      - "80:80"
    volumes:
      - .:/data
    networks:
      - pgnet

  app1:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php
    container_name: app1
    volumes:
      - .:/data
    networks:
      - pgnet

  app2:
      build:
        context: ./fpm
        dockerfile: Dockerfile
      image: myapp/php
      container_name: app2
      volumes:
        - .:/data
      networks:
        - pgnet

  postgres-master:
    container_name: pgmaster
    image: postgres:latest
    ports:
      - "15432:5432"
    volumes:
      - ./postgres_master_data:/var/lib/postgresql/data
      - .:/csv_data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_REPLICATION_USER: replica
      POSTGRES_REPLICATION_PASSWORD: replica_pass
      ROLE: master
    networks:
      - pgnet

  postgres-replica:
    container_name: pgslave
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_MASTER_SERVICE_HOST: postgres-master
      POSTGRES_REPLICATION_USER: replica
      POSTGRES_REPLICATION_PASSWORD: replica_pass
      ROLE: slave
    ports:
      - "15433:5432"
    volumes:
      - ./postgres_replica_data:/var/lib/postgresql/data
    networks:
      - pgnet

  postgres-async-replica:
    container_name: pgasyncslave
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_MASTER_SERVICE_HOST: postgres-master
      POSTGRES_REPLICATION_USER: replica
      POSTGRES_REPLICATION_PASSWORD: replica_pass
      ROLE: async_slave
    ports:
      - "15434:5432"
    volumes:
      - ./postgres_async_replica_data:/var/lib/postgresql/data
    networks:
      - pgnet

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - ./influxdb_data:/var/lib/influxdb
    entrypoint: ["./entrypoint.sh"]
    env_file:
      - .env
    networks:
      - pgnet

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    user: "telegraf:1"
    volumes:
      - ${TELEGRAF_CFG_PATH}:/etc/telegraf/telegraf.conf:rw
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    depends_on:
      - influxdb
    networks:
      - pgnet

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    volumes:
      - grafana-storage:/var/lib/grafana:rw
    depends_on:
      - influxdb
    ports:
      - ${GRAFANA_PORT}:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - pgnet

volumes:
  postgres_master_data:
  postgres_replica_data:
  postgres_async_replica_data:
  influxdb_data:
  grafana-storage:

networks:
  pgnet:
    driver: bridge
